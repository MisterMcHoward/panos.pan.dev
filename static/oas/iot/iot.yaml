info:
  description: |
    Please refer [IoT Public API Authentication](iot-public-api-headers) to know how to get API Key<br/>
    List of public APIs from IoT security:
    1. Link to [Get Device Detail](iot-public-api#operation/device-detail)
    2. Link to [Get Device Inventory](iot-public-api#operation/device-inventory)
    3. Link to [Get Security Alerts](iot-public-api#operation/alert-list)
    4. Link to [Resolve a Security Alert](iot-public-api#operation/alert-resolve)
    4. Link to [Get Vulnerabilities](iot-public-api#operation/vulnerability-list)
    4. Link to [Resolve Vulnerability Instances](iot-public-api#operation/vulnerability-resolve)
  title: IoT Public API Overview
  version: v4.0
  contact: {}
openapi: 3.0.0
servers:
- url: https://{customer-name}.iot.paloaltonetworks.com
tags:
- description: The IoT Public APIs are listed below.
  name: IoT Public API
paths:
  /pub/v4.0/device:
    get:
      description: 'Get a list of device details for the device with the specified MAC address. <br/> <b>Rate limiting<b/>: 60 times per minute'
      operationId: device-detail
      security:
      - X-Key-Id:  []
        X-Access-Key: []
      summary: Device Detail
      tags:
        - IoT Public API
      parameters:
      - description: The customer ID specifies the API call for a specific tenant.
        in: query
        name: customerid
        required: true
        schema:
          type: string
      - description: The device ID specifies the MAC address of the device for which you want to get details.
        in: query
        name: deviceid
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful Response (We only show some importants fields here)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoTDeviceDetailResponse'
              examples:
                deviceDetailResponseExample:
                  $ref: '#/components/examples/DeviceDetailResponseExample'
        '4XX':
          description: Client Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  $ref: '#/components/examples/BadRequestResponseExample'
                Unauthrorized Request:
                  $ref: '#/components/examples/UnauthorizedResponseExample'
        '5XX':
          description: Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                deviceDetailResponseExample:
                  $ref: '#/components/examples/ServerErrorResponseExample'

  /pub/v4.0/device/list:
    get:
      description: 'Get a list of all the devices in your IoT Security inventory. <br/> <b>Rate limiting<b/>: 60 times per minute'
      operationId: device-inventory
      security:
      - X-Key-Id:  []
        X-Access-Key: []
      summary: Device Inventory
      tags:
        - IoT Public API
      parameters:
      - description: The customer ID specifies the API call for a specific tenant.
        in: query
        name: customerid
        required: true
        schema:
          type: string
      - description: Field to set the start of a time range for retrieving devices.
        in: query
        name: stime
        required: false
        schema:
          type: string
          format: date-time
      - description: Field to get monitored devices or all discovered devices
        in: query
        name: filter_monitored
        required: false
        schema:
          type: string
          enum:
          - 'true'
          - 'false'
      - description: Field to get items on subsequent pages
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Field specifying thenumber of items for each page.
        in: query
        name: pagelength
        required: false
        schema:
          type: integer
      - description: Field to determine if all fields of devices needed to return
        in: query
        name: detail
        required: false
        schema:
          type: string
          enum:
          - 'true'
          - 'false'
      - description: 'Field to set sort direction: ascending or descending'
        in: query
        name: sortdirection
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - description: Field to set sorting column
        in: query
        name: sortfield
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful Response (We only show some importants fields here)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoTDeviceInventoryResponse'
              examples:
                deviceInventoryResponseExample:
                  $ref: '#/components/examples/DeviceInventoryResponseExample'
        '4XX':
          description: Client Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  $ref: '#/components/examples/BadRequestResponseExample'
                Unauthrorized Request:
                  $ref: '#/components/examples/UnauthorizedResponseExample'
        '5XX':
          description: Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                deviceInventoryResponseExample:
                  $ref: '#/components/examples/ServerErrorResponseExample'

  /pub/v4.0/alert/list:
    get:
      description: 'Get a list of security alerts. <br/> <b>Rate limiting<b/>: 60 times per minute'
      operationId: alert-list
      security:
      - X-Key-Id:  []
        X-Access-Key: []
      summary: Security Alerts
      tags:
        - IoT Public API
      parameters:
      - description: The customer ID specifies the API call for a specific tenant.
        in: query
        name: customerid
        required: true
        schema:
          type: string
      - description: Optional field specifying the alert type as policy_alert. The following value is a string.
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Optional field specifying the alert type as policy_alert. The following value is a string.
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: Optional field to get only active alerts (resolved=no, the default) or resolved alerts (resolved=yes). The following value is a string.
        in: query
        name: resolved
        required: false
        schema:
          type: string
      - description: Field to get items on subsequent pages. For example, if your first request is pagelength = 100, you will get the first 100 device alerts. To get the next 100, add offset = 100 to your second request. This skips the first 100 alerts and gets the next 100 starting from 101.
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Optional but recommended field specifying the number of items for each page. The default page length for alerts is 200 and the maximum is 1000. Setting a shorter length improves response times. The following value is an integer.
        in: query
        name: pagelength
        required: false
        schema:
          type: integer
      - description: Optional field defining whether the alerts are organized in ascending order asc (oldest to newest) or descending order desc (newest to oldest). The default is desc. The following value is a string.
        in: query
        name: sortdirection
        required: false
        schema:
          type: string
      - description: Optional field that defines how alerts are ordered. Only date is supported as the following value and it is a string.
        in: query
        name: sortfield
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful Response (We only show some importants fields here)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoTSecurityAlertResponse'
              examples:
                securityAlertsResponseExample:
                  $ref: '#/components/examples/SecurityAlertResponseExample'
        '4XX':
          description: Client Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  $ref: '#/components/examples/BadRequestResponseExample'
                Unauthrorized Request:
                  $ref: '#/components/examples/UnauthorizedResponseExample'
        '5XX':
          description: Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                securityAlertsResponseExample:
                  $ref: '#/components/examples/ServerErrorResponseExample'

  /pub/v4.0/alert/update:
    put:
      description: 'Resolve a security alert. <br/> <b>Rate limiting<b/>: 60 times per minute'
      operationId: alert-resolve
      security:
      - X-Key-Id:  []
        X-Access-Key: []
      summary: Resolve a Security Alert
      tags:
        - IoT Public API
      parameters:
      - description: The alert ID being resolved. To retrieve a list of security alerts, including their IDs, use [Get Security Alerts](iot-public-api#operation/alert-list)
        in: query
        name: id
        required: true
        schema:
          type: string
      - description: The customer ID specifies the API call for a specific tenant.
        in: query
        name: customerid
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
                - reason_type
                - resolved
              properties:
                reason:
                  type: string
                  description: This is the reason for resolving the alert. The following value is a string and cannot contain any special characters.
                reason_type:
                  type: string
                  description: 'This is the type of reason for resolving the alert and is one of the following array of values:
                    1. No Action Needed
                    2. Issue Mitigated
                    3. Normal behavior for this device
                    4. Normal behavior for all devices in the same IoT profile'
                resolved:
                  type: string
                  description: This defines the alert as resolved. The following value is a string and must be yes.
            examples:
              payloadExample:
                summary: An example of payload of resolving a security alert
                value:
                  reason: The alert poses no threat
                  resolved: yes
                  reason_type: ['No Action Needed']

      responses:
        '200':
          description: Successful Response (We only show some importants fields here)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveSecurityAlertResponse'
              examples:
                resolveSecurityAlertResponseExample:
                  $ref: '#/components/examples/ResolveSecurityAlertResponseExample'
        '4XX':
          description: Client Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  $ref: '#/components/examples/BadRequestResponseExample'
                Unauthrorized Request:
                  $ref: '#/components/examples/UnauthorizedResponseExample'
        '5XX':
          description: Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                resolveSecurityAlertResponseExample:
                  $ref: '#/components/examples/ServerErrorResponseExample'

  /pub/v4.0/vulnerability/list:
    get:
      description: 'Get a list of security alerts. <br/> <b>Rate limiting<b/>: 60 times per minute'
      operationId: vulnerability-list
      security:
      - X-Key-Id:  []
        X-Access-Key: []
      summary: Vulnerabilities
      tags:
        - IoT Public API
      parameters:
      - description: The customer ID specifies the API call for a specific tenant.
        in: query
        name: customerid
        required: true
        schema:
          type: string
      - description: Optional field setting the start of a time range for retrieving vulnerabilities. For example, to get all vulnerabilities since November 3, 2020 (Pacific Standard Time), the start time would be stime=2020-11-3T08:00Z.
        in: query
        name: stime
        required: false
        schema:
          type: string
      - description: Field to get items on subsequent pages. For example, if your first request is pagelength = 100, you will get the first 100 vulnerabilities (indexed from 0 to 99). To get the next 100, add offset = 100 to your second request. This skips the first 100 vulnerabilities and gets the next 100 starting from index number 100.
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Optional but recommended field specifying the number of items for each page. The default page length for vulnerabilities is unlimited and the maximum is 1000.  Setting a shorter length improves response times. The following value is an integer.
        in: query
        name: pagelength
        required: false
        schema:
          type: integer
      - description: Optional field defining a specific vulnerability. If omitted, all vulnerabilities are returned. The following value is a string.
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: Optional field that retrieves only confirmed or potential vulnerabilities. The following field is either the string Confirmed or Potential. If no value is passed, both types of vulnerabilities are returned.
        in: query
        name: status
        required: false
        schema:
          type: string
      - description: When requesting all vulnerabilities, the value is the string device. When requesting all vulnerabilities for a specific device, the value is string vulnerability followed by @deviceid=<device_id>, where the device ID is either a MAC address or, for static IP devices, an IP address.
        in: query
        name: groupby
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful Response (We only show some importants fields here)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoTVulnerabilyListResponse'
              examples:
                vulnerabilityListResponseExample:
                  $ref: '#/components/examples/VulnerabilityListResponseExample'
        '4XX':
          description: Client Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  $ref: '#/components/examples/BadRequestResponseExample'
                Unauthrorized Request:
                  $ref: '#/components/examples/UnauthorizedResponseExample'
        '5XX':
          description: Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                vulnerabilityListResponseExample:
                  $ref: '#/components/examples/ServerErrorResponseExample'

  /pub/v4.0/vulnerability/update:
    put:
      description: 'Mark one or more instances of a vulnerability as resolved. <br/> <b>Rate limiting<b/>: 60 times per minute'
      operationId: vulnerability-resolve
      security:
      - X-Key-Id:  []
        X-Access-Key: []
      summary: Resolve Vulnerabilty Instances
      tags:
        - IoT Public API
      parameters:
      - description: The customer ID specifies the API call for a specific tenant.
        in: query
        name: customerid
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ticketIdList
                - action
                - reason
                - full_name
              properties:
                ticketIdList:
                  type: string
                  description: "This is a list of one or more ticket IDs fir vulnerability instances being resolved.
                    If you include the ticket IDs for multiple vulnerability instances, separate them by commas; for example: 'ticketIdList': ['vuln-1a4a72c2', 'vuln-1a4a72c3', 'vuln-1a4a72c4']
                    To retrieve a list of vulnerabilities and vulnerability instances, including their ticket IDs, use [Get Vulnerabilities](iot-public-api#operation/vulnerability-list) and refer to the zb_ticketid values."
                action:
                  type: string
                  description: This is the action employed to resolve the vulnerability instance. The following value is a string and must be either mitigate or ignore.
                reason:
                  type: string
                  description: This is the reason for resolving the vulnerability instance. The following value is a string and cannot contain any special characters.
                full_name:
                  type: string
                  description: This is the name of the vulnerability; for example, CVE-2018-18568.
            examples:
              payloadExample:
                summary: An example of payload of resolving a vulnerability instance
                value:
                  reason: Threat was removed
                  full_name: CVE-2018-18568
                  ticketIdList: ['vuln-1a4a72c2']
                  action: mitigate

      responses:
        '200':
          description: Successful Response (We only show some importants fields here)
          content:
            application/json:
              examples:
                resolveSecurityAlertResponseExample:
                  $ref: '#/components/examples/ResolveVulnerabilityInstanceResponseExample'
        '4XX':
          description: Client Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Bad Request:
                  $ref: '#/components/examples/BadRequestResponseExample'
                Unauthrorized Request:
                  $ref: '#/components/examples/UnauthorizedResponseExample'
        '5XX':
          description: Server Error Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                resolveSecurityAlertResponseExample:
                  $ref: '#/components/examples/ServerErrorResponseExample'

components:
  securitySchemes:
    X-Key-Id:
      description: Your API header requires X-Key-Id for authentication.
      type: apiKey
      in: header
      name: X-Key-Id
    X-Access-Key:
      description: Your API header requires X-Key-Key for authentication.
      type: apiKey
      in: header
      name: X-Access-Key

  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: HTTP Status Code
        msg:
          type: string
          description: Error Message

    IoTDeviceDetailResponse:
      type: object
      properties:
        deviceid:
          type: string
          description: The device ID, which IoT Security uses to identify and track the device
        hostname:
          type: string
          description: The device hostname
        category:
          type: string
          description: The category to which the device belongs
        profile:
          type: string
          description: The device profile assigned to the device
        profile_type:
          type: string
          description: The type of device profile, such as IoT or Non_IoT
        profile_vertical:
          type: string
          description: The industry vertical for the profile such as Medical, IT Devices, and Office
        ip_address:
          type: string
          description: The IP address of the device
        mac_address:
          type: string
          description: The MAC address of the device
        risk_score:
          type: integer
          description: The risk score of the device
        risk_level:
          type: string
          description: 'The risk level of the device; there are four: low, medium, high, and critical'
        last_activity:
          type: string
          format: date-time
          description: A UTC timestamp for the last detected device activity
        confidence_score:
          type: string
          description: The confidence score for device classification
        subnet:
          type: string
          description: The subnet to which the device is attached
        number_of_critical_alerts:
          type: integer
          description: The number of critical alerts for the device
        number_of_warning_alerts:
          type: integer
          description: The number of warning alerts for the device
        number_of_caution_alerts:
          type: integer
          description: The number of caution alerts for the device
        number_of_info_alerts:
          type: integer
          description: The number of info alerts for the device

    IoTDeviceInventoryResponse:
      type: object
      properties:
        total:
          type: integer
          description: The number of devices matching the request
        devices:
          type: array
          description: An array containing device details
          items:
            $ref: '#/components/schemas/DeviceDetails'

    IoTSecurityAlertResponse:
      type: object
      properties:
        total:
          type: integer
          description: The number of security alerts matching the request
        items:
          type: array
          description: An array containing security alerts
          items:
            $ref: '#/components/schemas/AlertDetails'

    ResolveSecurityAlertResponse:
      type: object
      properties:
        api:
          type: string
          description: The API path
        ver:
          type: string
          description: API version

    IoTVulnerabilyListResponse:
      type: object
      properties:
        total:
          type: integer
          description: The number of vulnerablities matching the request
        items:
          type: array
          description: An array containing vulnerablities
          items:
            $ref: '#/components/schemas/Vulnerabilies'

    ResolveVulnerabilityResponse:
      type: object
      properties:
        api:
          type: string
          description: The API path
        ver:
          type: string
          description: API version

    DeviceDetails:
      type: object
      properties:
        deviceid:
          type: string
          description: The device ID, which IoT Security uses to identify and track the device
        hostname:
          type: string
          description: The device hostname
        category:
          type: string
          description: The category to which the device belongs
        profile:
          type: string
          description: The device profile assigned to the device
        profile_type:
          type: string
          description: The type of device profile, such as IoT or Non_IoT
        profile_vertical:
          type: string
          description: The industry vertical for the profile such as Medical, IT Devices, and Office
        ip_address:
          type: string
          description: The IP address of the device
        mac_address:
          type: string
          description: The MAC address of the device
        risk_score:
          type: integer
          description: The risk score of the device
        risk_level:
          type: string
          description: 'The risk level of the device; there are four: low, medium, high, and critical'
        last_activity:
          type: string
          format: date-time
          description: A UTC timestamp for the last detected device activity
        confidence_score:
          type: string
          description: The confidence score for device classification

    AlertDetails:
      type: object
      properties:
        resolved:
          type: string
          description: Whether the alert has been resolved yes or not no
        date:
          type: string
          description: The alert detection date
        deviceid:
          type: string
          description: The MAC address or IP address of a device
        name:
          type: string
          description: The alert name
        severity:
          type: string
          description: 'The severity level of an alert: high, medium, low, info'
        severityNumber:
          type: integer
          description: 'The severity number matching the severity level: high = 4, medium = 3, low = 2, info = 1'
        type:
          type: string
          description: The type of alert
        description:
          type: string
          description: The alert description
        tenantid:
          type: string
          description: The internal customer ID
        zb_ticketid:
          type: string
          description: The unique ticket ID
        id:
          type: string
          description: The alert ID. This is the ID to use when resolving an alert through the API
        profile:
          type: string
          description: The device profile to which the alert belongs
        category:
          type: string
          description: The device category to which the alert belongs
        hostname:
          type: string
          description: The hostname of the device to which the alert belongs
        reason_history:
          type: string
          description: The history of actions taken to investigate and resolve the alert

    Vulnerabilies:
      type: object
      properties:
        items:
          type: string
          description: Introduces items in the list of vulnerabilities
        name:
          type: string
          description: The hostname of the device associated with a vulnerability instance
        ip:
          type: string
          description: The IP address of the device associated with a vulnerability instance
        deviceid:
          type: string
          description: The MAC address or IP address of the device
        profile:
          type: string
          description: The profile to which the device belongs
        profile_vertical:
          type: string
          description: The vertical to which the device profile belongs
        display_profile_category:
          type: string
          description: The category to which the device profile belongs
        vendor:
          type: string
          description: The device vendor
        model:
          type: string
          description: The device model
        os:
          type: string
          description: The device OS
        osCombined:
          type: string
          description: The OS and OS version combined
        siteid:
          type: string
          description: The ID of the site where the device is deployed
        asset_tag:
          type: string
          description: The asset tag of the device; if none, then “null” is returned
        sn:
          type: string
          description: The device serial number
        date:
          type: string
          description: The date of the latest activity of the device
        risk_score:
          type: integer
          description: The risk score of the vulnerability
        risk_level:
          type: string
          description: 'The risk level of the vulnerability: Low, Medium, High, or Critical'
        ticketState:
          type: string
          description: The state of the zb_ticket for a vulnerability instance —investigation, remediation, resolved, or new if the vulnerability was detected but nobody has yet taken action to address it
        zb_ticketid:
          type: string
          description: The unique ticket ID for a vulnerability instance
        ticketAssignees:
          type: string
          description: The email address of one or more people assigned to remediate a vulnerability instance; if there aren’t any, null is returned
        reason_history:
          type: string
          description: An array that holds the history of all actions taken on a vulnerability instance, including status changes, user notes, if it was sent to asset management, and if it was resolved; if no actions were taken, null is returned
        remediate_workorder:
          type: string
          description: The work order number returned from an integrated third-party asset management system such as AIMS, Connectiv, Nuvolo, or ServiceNow to which a vulnerability instance was sent
        remediate_checkbox:
          type: string
          description: Index values indicating the type of information sent to asset management; 0 = vulnerability summary, 1 = vulnerability impact, 2 = device information
        remediate_instruction:
          type: string
          description: Additional instructions included with the work order
        detected_date:
          type: string
          description: The date when a vulnerability instance was originally detected
        vulnerability_name:
          type: string
          description: The name of the vulnerability

  examples:
    BadRequestResponseExample:
      value: {
        code: '400',
        msg: invalid request
      }

    UnauthorizedResponseExample:
      value: {
        code: '403',
        msg: no access
      }

    ServerErrorResponseExample:
      value: {
        code: '500',
        msg: internal server error
      }

    DeviceDetailResponseExample:
      value: {
        deviceid: 34:02:86:44:65:36,
        hostname: InfusionPump-20,
        category: Infusion System,
        profile: Sigma Spectrum Infusion System,
        profile_type: IoT,
        profile_vertical: Medical,
        ip_address: 192.168.10.121,
        mac_address: 34:02:86:44:65:36,
        risk_score: 0,
        risk_level: low,
        last_activity: 2018-05-31T18:39:37.404Z,
        confidence_score: '90',
        subnet: 192.168.10.121/28,
        number_of_critical_alerts: 0,
        number_of_warning_alerts: 0,
        number_of_caution_alerts: 0,
        number_of_info_alerts: 0
      }

    DeviceInventoryResponseExample:
      value: {
        total: 1,
        devices: [
          {
            deviceid: 34:02:86:44:65:36,
            hostname: InfusionPump-20,
            category: Infusion System,
            profile: Sigma Spectrum Infusion System,
            profile_type: IoT,
            profile_vertical: Medical,
            ip_address: 192.168.10.121,
            mac_address: 34:02:86:44:65:36,
            risk_score: 0,
            risk_level: low,
            last_activity: 2018-05-31T18:39:37.404Z,
            confidence_score: '90'
          }
        ]
      }

    SecurityAlertResponseExample:
      value: {
        total: 1,
        items: [
          {
            resolved': 'no',
            date': '2020-05-12T01:23:10.630Z',
            deviceid': '18:65:90:cd:88:0d',
            name': 'zingcloud alert bg job integration test at 1589246590630',
            severity': 'high',
            severityNumber': 4,
            type': 'policy_alert',
            description': 'The baseline policy defines a criteria to match normal connections between devices in two different networks or device groups. It is a positive detection if connections outside of this definition are observed.',
            tenantid': 'acmecorp' ,
            zb_ticketid: 'alert-hNMleG1nW',
            id: '5eb9fa8127b736d82bf7840a',
            profile: 'Macintosh-MacPro',
            category: 'Personal Computer',
            hostname: 'cntl-201-2',
            internal_hostname: 'cntl-201-2',
            siteid: '0',
            serviceLevel': '',
            reason_history: [],
            msg': {
              severity: 'high',
              description: 'The baseline policy defines criteria to match normal connections between devices in two different networks or device groups. It is a positive detection if connections outside of this definition are observed.',
              name: 'zingcloud alert bg job integration test at 1589246590630',
              id: 'hNMleG1nW',
              ruleid: '5a26f169c8272f0b00c5ef1a',
              zb_ticketid: 'alert-hNMleG1nW',
              hostname: 'unknown'
            }
          }
        ]
      }

    ResolveSecurityAlertResponseExample:
      value: {
        api: '/pub/v4.0/alert/update',
        ver: 'v4.0'
      }

    VulnerabilityListResponseExample:
      value: {
        'ver': 'v4.0',
        'api': '/vulnerability/list',
        'items': [
          {
            'name': 'Polycom_64167f372d45',
            'ip': '10.1.1.84',
            'deviceid': '64:16:7f:37:2d:45',
            'profile': 'Polycom IP Phone',
            'profile_vertical': 'Office',
            'display_profile_category': 'IP Phone',
            'vendor': 'Polycom',
            'model': 'VVX601',
            'os': 'Embedded',
            'osCombined': 'Embedded',
            'siteid': '0',
            'asset_tag': null,
            'sn': null,
            'date': '2020-05-12T01:28:26.986Z',
            'risk_score': 20,
            'risk_level': 'Low',
            'ticketState': 'new',
            'zb_ticketid': 'vuln-52f40a58',
            'ticketAssignees': [ 'analyst1@acmecorp.com'],
            'reason_history': [
              {
                'action': 'sent to asset management: aims',
                'reason': 'Check system',
                'reason_type': null,
                'user_email': 'admin@acmecorp.com',
                'timestamp': '2019-10-18T22:00:20.255Z',
                'aims_workorder_number': 152027
              }
            ],
          'remediate_workorder': '152027',
          'remediate_checkbox': '0,1,2',
          'remediate_instruction': null,
          'detected_date': '2019-10-15T20:18:42.135Z',
          'vulnerability_name': 'CVE-2019-12948'
          }
        ]
      }

    ResolveVulnerabilityInstanceResponseExample:
      value: {
        "api": "/pub/v4.0/vulnerability/update",
        "ver":"v4.0",
        "updatedVulnerInstanceList":
          [
            "newLevel": "Low",
            "newScore": 18,
            "newAnomalyMap":
              {
                "application": 0.125,
                "payload": 0.125,
                "internal": 0.125,
                "external": 0.125,
                "protocol": 0.125
              }
          ]
      }